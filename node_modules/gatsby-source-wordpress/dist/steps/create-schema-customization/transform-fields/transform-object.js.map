{"version":3,"file":"transform-object.js","names":["transformListOfGatsbyNodes","field","fieldName","typeName","buildTypeName","type","ofType","name","resolve","source","args","context","nodes","Array","isArray","nodeModel","getNodesByIds","ids","map","node","id","buildGatsbyNodeObjectResolver","_","nodeField","existingNode","getNodeById","schema","typePrefix","prefix","getPluginOptions","__typename","startsWith","queryInfo","getQueryInfoByTypeName","isLazyMediaItem","typeInfo","nodesTypeName","settings","lazyNodes","inPreviewMode","usingGatsbyV4OrGreater","fetchAndCreateSingleNode","actionType","singleName","singularName","helpers","getGatsbyApi","actions","createParentChildLink","parent","child","transformGatsbyNodeObject","transformerApi"],"sources":["../../../../src/steps/create-schema-customization/transform-fields/transform-object.js"],"sourcesContent":["import { buildTypeName } from \"~/steps/create-schema-customization/helpers\"\nimport { fetchAndCreateSingleNode } from \"~/steps/source-nodes/update-nodes/wp-actions/update\"\nimport { getQueryInfoByTypeName } from \"~/steps/source-nodes/helpers\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\nimport { inPreviewMode } from \"~/steps/preview/index\"\nimport { getPluginOptions } from \"../../../utils/get-gatsby-api\"\nimport { usingGatsbyV4OrGreater } from \"~/utils/gatsby-version\"\n\nexport const transformListOfGatsbyNodes = ({ field, fieldName }) => {\n  const typeName = buildTypeName(field.type.ofType.name)\n\n  return {\n    type: `[${typeName}]`,\n    resolve: (source, args, context) => {\n      let nodes = null\n\n      const field = source[fieldName]\n\n      if (field && Array.isArray(field)) {\n        nodes = field\n      } else if (Array.isArray(source?.nodes)) {\n        nodes = source.nodes\n      }\n\n      if (!nodes) {\n        return null\n      }\n\n      return context.nodeModel.getNodesByIds({\n        ids: nodes.map(node => node?.id),\n        type: typeName,\n      })\n    },\n  }\n}\n\nexport const buildGatsbyNodeObjectResolver =\n  ({ field, fieldName }) =>\n  async (source, _, context) => {\n    const typeName = buildTypeName(field.type.name)\n    const nodeField = source[fieldName]\n\n    if (!nodeField || (nodeField && !nodeField.id)) {\n      return null\n    }\n\n    const existingNode = context.nodeModel.getNodeById({\n      id: nodeField.id,\n      type: typeName,\n    })\n\n    const {\n      schema: { typePrefix: prefix },\n    } = getPluginOptions()\n\n    if (\n      existingNode?.__typename &&\n      !existingNode.__typename.startsWith(prefix)\n    ) {\n      existingNode.__typename = buildTypeName(existingNode.__typename)\n    }\n\n    if (existingNode) {\n      return existingNode\n    }\n\n    const queryInfo = getQueryInfoByTypeName(field.type.name)\n\n    if (!queryInfo) {\n      // if we don't have query info for a type\n      // it probably means this type is excluded in plugin options\n      return null\n    }\n\n    const isLazyMediaItem =\n      queryInfo.typeInfo.nodesTypeName === `MediaItem` &&\n      queryInfo.settings.lazyNodes\n\n    if (\n      // only fetch/create nodes in resolvers for media items when they have lazyNodes enabled\n      (!isLazyMediaItem &&\n        // but if we're in preview mode we want to lazy fetch nodes\n        // because if nodes are limited we still want to lazy fetch connections\n        !inPreviewMode()) ||\n      // lazyNodes option isn't supported in Gatsby v4+\n      usingGatsbyV4OrGreater\n    ) {\n      return null\n    }\n\n    // if this node doesn't exist, fetch it and create a node\n    const { node } = await fetchAndCreateSingleNode({\n      id: nodeField.id,\n      actionType: `CREATE`,\n      singleName: queryInfo.typeInfo.singularName,\n    })\n\n    if (source.id && node) {\n      const { helpers } = getGatsbyApi()\n\n      await helpers.actions.createParentChildLink({\n        parent: source,\n        child: node,\n      })\n    }\n\n    return node || null\n  }\n\nexport const transformGatsbyNodeObject = transformerApi => {\n  const { field } = transformerApi\n  const typeName = buildTypeName(field.type.name)\n\n  return {\n    type: typeName,\n    resolve: buildGatsbyNodeObjectResolver(transformerApi),\n  }\n}\n"],"mappings":"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"}